{"version":3,"sources":["./src/app/room/room-routing.module.ts","./src/app/room/room-create/room-create.component.ts","./src/app/room/room-create/room-create.component.html","./src/app/room/room-join/room-join.component.ts","./src/app/room/room-join/room-join.component.html","./src/app/room/room-wait/room-wait.component.ts","./src/app/room/room-wait/room-wait.component.html","./src/app/room/room.module.ts","./src/app/room/room-start/room-start.component.ts","./src/app/room/room-start/room-start.component.html","./src/app/shared/models/room.model.ts"],"names":[],"mappings":"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","file":"room-room-module.js","sourcesContent":["import { RoomJoinComponent } from './room-join/room-join.component';\r\nimport { RoomWaitComponent } from './room-wait/room-wait.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RoomStartComponent } from './room-start/room-start.component';\r\nimport { RoomCreateComponent } from './room-create/room-create.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RoomStartComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'create',\r\n    component: RoomCreateComponent,\r\n  },\r\n  {\r\n    path: 'join',\r\n    component: RoomJoinComponent,\r\n  },\r\n  {\r\n    path: 'wait',\r\n    component: RoomWaitComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RoomRoutingModule {}\r\n","import { CommonService } from './../../common.service';\r\nimport { RoomService } from './../room.service';\r\nimport { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of, throwError } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'room-create',\r\n  templateUrl: './room-create.component.html',\r\n  styleUrls: ['./room-create.component.scss'],\r\n})\r\nexport class RoomCreateComponent {\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  formGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required),\r\n    numberOfPlayers: new FormControl(6, [\r\n      Validators.required,\r\n      Validators.min(4),\r\n    ]),\r\n    numberOfMafia: new FormControl(2, [Validators.required, Validators.min(1)]),\r\n    numberOfPolices: new FormControl(1, [\r\n      Validators.required,\r\n      Validators.min(0),\r\n    ]),\r\n  });\r\n\r\n  onRoomCreateClick() {\r\n    const { name, numberOfPlayers, numberOfMafia, numberOfPolices } =\r\n      this.formGroup.value;\r\n\r\n    if (\r\n      numberOfMafia > numberOfPlayers ||\r\n      numberOfPolices > numberOfPlayers ||\r\n      numberOfMafia + numberOfPolices > numberOfPlayers\r\n    ) {\r\n      this.commonService.openAlertModal({\r\n        message:\r\n          'Количество мафии и коммиссаров не может быть больше, чем количество игроков',\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.roomService\r\n      .createRoom(name, numberOfPlayers, numberOfMafia, numberOfPolices)\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.commonService.openAlertModal({ message: err.error.message });\r\n          return throwError(err);\r\n        }),\r\n      )\r\n      .subscribe(({ room, player }) => {\r\n        this.roomService.room.next(room);\r\n        this.roomService.player.next(player);\r\n        this.router.navigate(['../wait'], {\r\n          relativeTo: this.route,\r\n        });\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\" [formGroup]=\"formGroup\">\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Как вас зовут?</mat-label>\r\n    <input matInput placeholder=\"Davai\" formControlName=\"name\" />\r\n    <mat-error *ngIf=\"formGroup.controls.name.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Количество человек</mat-label>\r\n    <input\r\n      matInput\r\n      placeholder=\"9\"\r\n      type=\"number\"\r\n      formControlName=\"numberOfPlayers\"\r\n    />\r\n    <mat-error *ngIf=\"formGroup.controls.numberOfPlayers.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    ><mat-error *ngIf=\"formGroup.controls.numberOfPlayers.hasError('min')\"\r\n      >Минимум 4</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Мафия</mat-label>\r\n    <input\r\n      matInput\r\n      placeholder=\"2\"\r\n      type=\"number\"\r\n      formControlName=\"numberOfMafia\"\r\n    />\r\n    <mat-error *ngIf=\"formGroup.controls.numberOfMafia.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    ><mat-error *ngIf=\"formGroup.controls.numberOfMafia.hasError('min')\"\r\n      >Минимум 1</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Комиссар</mat-label>\r\n    <input\r\n      matInput\r\n      placeholder=\"1\"\r\n      type=\"number\"\r\n      formControlName=\"numberOfPolices\"\r\n    />\r\n    <mat-error *ngIf=\"formGroup.controls.numberOfPolices.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    ><mat-error *ngIf=\"formGroup.controls.numberOfPolices.hasError('min')\"\r\n      >Должен быть положительным</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    class=\"w-100 mt-4\"\r\n    [disabled]=\"!formGroup.valid\"\r\n    (click)=\"onRoomCreateClick()\"\r\n  >\r\n    СОЗДАТЬ\r\n  </button>\r\n</div>\r\n","import { CommonService } from './../../common.service';\r\nimport { RoomService } from './../room.service';\r\nimport { Component } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { RoomStatus } from 'src/app/shared/models/room.model';\r\n\r\n@Component({\r\n  selector: 'room-join',\r\n  templateUrl: './room-join.component.html',\r\n  styleUrls: ['./room-join.component.scss'],\r\n})\r\nexport class RoomJoinComponent {\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  roomJoinFormGroup = new FormGroup({\r\n    code: new FormControl(null, Validators.required),\r\n    name: new FormControl(null, Validators.required),\r\n  });\r\n\r\n  onRoomJoinClick() {\r\n    const { code, name } = this.roomJoinFormGroup.value;\r\n    this.roomService\r\n      .joinRoom(code, name)\r\n      .pipe(\r\n        catchError((err) => {\r\n          this.commonService.openAlertModal({ message: err.error.message });\r\n          return throwError(err);\r\n        }),\r\n      )\r\n      .subscribe(({ room, player }) => {\r\n        this.roomService.room.next(room);\r\n        this.roomService.player.next(player);\r\n        this.router.navigate(['../wait'], {\r\n          relativeTo: this.route,\r\n        });\r\n      });\r\n  }\r\n}\r\n","<div class=\"container\" [formGroup]=\"roomJoinFormGroup\">\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Введите код комнаты</mat-label>\r\n    <input\r\n      matInput\r\n      formControlName=\"code\"\r\n      #codeInput\r\n      (input)=\"codeInput.value = codeInput.value.toUpperCase()\"\r\n    />\r\n    <mat-error *ngIf=\"roomJoinFormGroup.controls.code.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"standard\" class=\"w-100\">\r\n    <mat-label>Как вас зовут?</mat-label>\r\n    <input matInput formControlName=\"name\" />\r\n    <mat-error *ngIf=\"roomJoinFormGroup.controls.name.hasError('required')\"\r\n      >Обязательное поле</mat-error\r\n    >\r\n  </mat-form-field>\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    class=\"w-100 mt-4\"\r\n    [disabled]=\"!roomJoinFormGroup.valid\"\r\n    (click)=\"onRoomJoinClick()\"\r\n  >\r\n    ПРИСОЕДИНИТЬСЯ\r\n  </button>\r\n</div>\r\n","import { Player } from './../../shared/models/player.model';\r\nimport { Room, RoomStatus } from './../../shared/models/room.model';\r\nimport { RoomService } from './../room.service';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { interval, Subscription, throwError } from 'rxjs';\r\nimport { catchError, filter, switchMap } from 'rxjs/operators';\r\nimport { CommonService } from 'src/app/common.service';\r\n\r\n@Component({\r\n  selector: 'room-wait',\r\n  templateUrl: './room-wait.component.html',\r\n  styleUrls: ['./room-wait.component.scss'],\r\n})\r\nexport class RoomWaitComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  room: Room;\r\n  player: Player;\r\n\r\n  intervalSub: Subscription;\r\n\r\n  ngOnInit(): void {\r\n    this.roomService.room\r\n      .pipe(filter((room) => room != null || room != undefined))\r\n      .subscribe((room) => {\r\n        this.room = room;\r\n        if (room.roomStatus == RoomStatus.ACTIVE) {\r\n          this.router.navigate(['game']);\r\n        }\r\n      });\r\n    this.player = this.roomService.player.getValue();\r\n    if (!this.room) {\r\n      this.router.navigate(['room']);\r\n      return;\r\n    }\r\n    this.intervalSub = interval(2000)\r\n      .pipe(\r\n        switchMap(() =>\r\n          this.roomService.waitRoom(this.room.code, this.player.name),\r\n        ),\r\n        catchError((err) => {\r\n          this.commonService.openAlertModal({ message: err.error.message });\r\n          this.router.navigate(['room']);\r\n          return throwError(err);\r\n        }),\r\n      )\r\n      .subscribe((room) => {\r\n        this.roomService.room.next(room);\r\n      });\r\n  }\r\n\r\n  onGameStart() {\r\n    this.roomService\r\n      .startRoom(this.room.code)\r\n      .subscribe((res) => console.log(res));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.intervalSub?.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"room-code\">\r\n    <h3>Код комнаты</h3>\r\n    <h2>{{ room?.code }}</h2>\r\n  </div>\r\n  <div class=\"players-list\">\r\n    <h4>Список участников</h4>\r\n    <span class=\"number-of-players\"\r\n      >{{ room?.players.length }}/{{ room?.numberOfPlayers }}</span\r\n    >\r\n    <div class=\"player-list-item\" *ngFor=\"let player of room?.players\">\r\n      <mat-icon>person</mat-icon> <span class=\"name\">{{ player.name }}</span>\r\n    </div>\r\n  </div>\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    class=\"w-100 mt-4\"\r\n    [disabled]=\"\r\n      !player?.isRoomCreator || room.numberOfPlayers > room.players.length\r\n    \"\r\n    (click)=\"onGameStart()\"\r\n  >\r\n    НАЧАТЬ ИГРУ\r\n  </button>\r\n</div>\r\n","import { RoomJoinComponent } from './room-join/room-join.component';\r\nimport { RoomWaitComponent } from './room-wait/room-wait.component';\r\nimport { RoomStartComponent } from './room-start/room-start.component';\r\nimport { RoomRoutingModule } from './room-routing.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RoomCreateComponent } from './room-create/room-create.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RoomRoutingModule,\r\n    SharedModule,\r\n  ],\r\n  declarations: [\r\n    RoomCreateComponent,\r\n    RoomStartComponent,\r\n    RoomWaitComponent,\r\n    RoomJoinComponent,\r\n  ],\r\n})\r\nexport class RoomModule {}\r\n","import { Component } from '@angular/core';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'room-start',\r\n  templateUrl: './room-start.component.html',\r\n  styleUrls: ['./room-start.component.scss'],\r\n})\r\nexport class RoomStartComponent {}\r\n","<div class=\"container d-flex flex-column justify-content-center\">\r\n  <a mat-raised-button color=\"primary\" class=\"mb-3\" [routerLink]=\"['join']\"\r\n    >ПРИСОЕДИНИТЬСЯ</a\r\n  >\r\n  <a mat-raised-button color=\"secondary\" [routerLink]=\"['create']\"\r\n    >СОЗДАТЬ КОМНАТУ</a\r\n  >\r\n</div>\r\n","import { Player } from './player.model';\r\n\r\nexport enum RoomStatus {\r\n  PENDING,\r\n  ACTIVE,\r\n  CANCELED,\r\n}\r\n\r\nexport interface Room {\r\n  code: string;\r\n  id: string;\r\n  numberOfPlayers: number;\r\n  numberOfMafia: number;\r\n  numberOfPolices: number;\r\n  players: Player[];\r\n  roomStatus: RoomStatus;\r\n}\r\n"],"sourceRoot":"webpack:///"}