{"version":3,"sources":["./src/app/game/game.service.ts","./src/app/game/idle/idle.component.ts","./src/app/window.token.ts","./src/environments/environment.ts","./src/app/shared/components/alert/alert.component.ts","./src/app/shared/components/alert/alert.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/models/card-type.model.ts","./src/app/common.service.ts","./src/app/game/action/action.component.ts","./src/app/game/action/action.component.html","./src/app/constants.ts","./src/app/shared/tokens/game-action.tokens.ts","./src/app/shared/models/action.modal.ts","./src/app/shared/models/citizen.model.ts","./src/app/shared/tokens/alert.tokens.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Overlay } from '@angular/cdk/overlay';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BASE_URL } from '../constants';\r\nimport { Card } from '../shared/models/card.model';\r\nimport { Game } from '../shared/models/game.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class GameService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getGameStatus(roomCode: string) {\r\n    return this.http.get<Game>(`${BASE_URL}game/status/${roomCode}`);\r\n  }\r\n\r\n  killByMafia(roomCode: string, citizenName: string) {\r\n    return this.http.post<Game>(`${BASE_URL}game/killByMafia`, {\r\n      roomCode,\r\n      citizenName,\r\n    });\r\n  }\r\n\r\n  killByCivil(roomCode: string, citizenName: string) {\r\n    return this.http.post<Game>(`${BASE_URL}game/killByCivil`, {\r\n      roomCode,\r\n      citizenName,\r\n    });\r\n  }\r\n\r\n  policeCheck(roomCode: string, citizenName: string, cardIndex: string) {\r\n    return this.http.post<Card>(`${BASE_URL}game/policeCheck`, {\r\n      roomCode,\r\n      citizenName,\r\n      cardIndex,\r\n    });\r\n  }\r\n\r\n  cardReveal(roomCode: string, citizenName: string, cardIndex: number) {\r\n    return this.http.post<Game>(`${BASE_URL}game/cardReveal`, {\r\n      roomCode,\r\n      citizenName,\r\n      cardIndex,\r\n    });\r\n  }\r\n\r\n  startNight(roomCode) {\r\n    return this.http.post<Game>(`${BASE_URL}game/startNight`, {\r\n      roomCode,\r\n    });\r\n  }\r\n\r\n  startJudge(roomCode) {\r\n    return this.http.post<Game>(`${BASE_URL}game/startJudge`, {\r\n      roomCode,\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'game-idle',\r\n  template: '<div></div>',\r\n})\r\nexport class IdleComponent {}\r\n","import { FactoryProvider, InjectionToken } from '@angular/core';\r\n\r\nexport const WINDOW = new InjectionToken<Window>('window');\r\n\r\nconst windowProvider: FactoryProvider = {\r\n  provide: WINDOW,\r\n  useFactory: () => window,\r\n};\r\n\r\nexport const WINDOW_PROVIDERS = [windowProvider];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { Component, Inject } from '@angular/core';\r\nimport {\r\n  ALERT_MODAL_MESSAGE,\r\n  ALERT_OVERLAY_REF,\r\n} from '../../tokens/alert.tokens';\r\n\r\n@Component({\r\n  selector: 'alert',\r\n  templateUrl: './alert.component.html',\r\n  styleUrls: ['./alert.component.scss'],\r\n})\r\nexport class AlertComponent {\r\n  constructor(\r\n    @Inject(ALERT_MODAL_MESSAGE) public message: string,\r\n    @Inject(ALERT_OVERLAY_REF) private alertOverlayRef: OverlayRef,\r\n  ) {}\r\n\r\n  onDismissClick() {\r\n    this.alertOverlayRef.detach();\r\n  }\r\n}\r\n","<div class=\"alert-container\">\r\n  <div class=\"info-block\">\r\n    <mat-icon>warning</mat-icon>\r\n    <p>{{ message }}</p>\r\n  </div>\r\n  <button (click)=\"onDismissClick()\">Dismiss</button>\r\n</div>\r\n","import { AlertComponent } from './components/alert/alert.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// Material Form Controls\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n// Material Navigation\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n// Material Layout\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n// Material Buttons & Indicators\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n// Material Popups & Modals\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n// Material Data tables\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n@NgModule({\r\n  declarations: [AlertComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    AlertComponent,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","import { CommonService } from './common.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { NavigationEnd, Router, RouterEvent } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\ninterface RouterPath {\n  path: string;\n  title: string;\n  hasBackBtn: boolean;\n}\n\nconst routes: RouterPath[] = [\n  {\n    path: '/room',\n    title: 'Главная',\n    hasBackBtn: false,\n  },\n  {\n    path: '/room/create',\n    title: 'Создание комнаты',\n    hasBackBtn: true,\n  },\n  {\n    path: '/room/join',\n    title: 'Присоединиться',\n    hasBackBtn: true,\n  },\n  {\n    path: '/room/wait',\n    title: 'Ждем участников',\n    hasBackBtn: true,\n  },\n  {\n    path: '/game',\n    title: 'Игра',\n    hasBackBtn: false,\n  },\n];\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  constructor(\n    private router: Router,\n    private location: Location,\n    private commonService: CommonService,\n  ) {}\n\n  currentRoute?: RouterPath;\n\n  ngOnInit() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe((event) => {\n        this.currentRoute = routes.find(\n          (route) => route.path == (event as RouterEvent).url,\n        );\n      });\n    // this.commonService.openAlertModal({ message: 'SOSI' });\n  }\n\n  onBackClick() {\n    this.location.back();\n  }\n}\n","<mat-toolbar color=\"primary\">\r\n  <button\r\n    mat-icon-button\r\n    class=\"example-icon arrow_back_ios_new-icon\"\r\n    aria-label=\"Example icon-button with heart icon\"\r\n    *ngIf=\"currentRoute?.hasBackBtn\"\r\n    (click)=\"onBackClick()\"\r\n  >\r\n    <mat-icon>arrow_back_ios_new</mat-icon>\r\n  </button>\r\n  <span>{{ currentRoute?.title }}</span>\r\n</mat-toolbar>\r\n<router-outlet></router-outlet>\r\n","import { MatToolbarModule } from '@angular/material/toolbar';\nimport { SharedModule } from './shared/shared.module';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { WINDOW_PROVIDERS } from './window.token';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    SharedModule,\n  ],\n  providers: [WINDOW_PROVIDERS],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export enum CardType {\r\n  CIVIL,\r\n  MAFIA,\r\n  POLICE,\r\n}\r\n","import { AlertComponent } from './shared/components/alert/alert.component';\r\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ALERT_MODAL_MESSAGE,\r\n  ALERT_OVERLAY_REF,\r\n} from './shared/tokens/alert.tokens';\r\nimport { Citizen } from './shared/models/citizen.model';\r\nimport {\r\n  GAME_ACTION_MODAL_ACTION_TYPE,\r\n  GAME_ACTION_MODAL_CITIZENS,\r\n  GAME_ACTION_MODAL_CLOSE,\r\n  GAME_ACTION_MODAL_MY_CITIZEN,\r\n  GAME_ACTION_MODAL_OPEN_IDLE,\r\n  GAME_ACTION_MODAL_RESULT_MESSAGE,\r\n  GAME_ACTION_MODAL_ROOM_CODE,\r\n} from './shared/tokens/game-action.tokens';\r\nimport { GameActionComponent } from './game/action/action.component';\r\nimport { IdleComponent } from './game/idle/idle.component';\r\nimport { ActionType } from './shared/models/action.modal';\r\n\r\ninterface ModalConfig {\r\n  panelClass?: string;\r\n  hasBackdrop?: boolean;\r\n  backdropClass?: string;\r\n}\r\n\r\ninterface AlertModalConfig extends ModalConfig {\r\n  message?: string;\r\n}\r\n\r\ninterface ActionModalConfig extends ModalConfig {\r\n  citizens?: Citizen[];\r\n  roomCode?: string;\r\n  actionType: ActionType;\r\n  myCitizen: Citizen;\r\n  gameResultMessage?: string;\r\n}\r\n\r\nconst DEFAULT_CONFIG: ModalConfig = {\r\n  hasBackdrop: true,\r\n  backdropClass: 'dark-backdrop',\r\n  panelClass: 'panel',\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonService {\r\n  constructor(private overlay: Overlay) {}\r\n  alertOverlayRef?: OverlayRef;\r\n  actionOverlayRef?: OverlayRef;\r\n  idleOverlayRef?: OverlayRef;\r\n\r\n  openIdleModal() {\r\n    if (!this.idleOverlayRef) {\r\n      const config: ModalConfig = { backdropClass: 'purple-backdrop' };\r\n      const modalConfig = { ...DEFAULT_CONFIG, ...config };\r\n      this.idleOverlayRef = this.createOverlay(modalConfig);\r\n\r\n      const idleModalPortal = new ComponentPortal(IdleComponent);\r\n      this.idleOverlayRef.attach(idleModalPortal);\r\n    }\r\n  }\r\n  closeIdleModal() {\r\n    if (this.idleOverlayRef) {\r\n      this.idleOverlayRef.dispose();\r\n      this.idleOverlayRef = null;\r\n    }\r\n  }\r\n\r\n  openGameActionModal(config: ActionModalConfig) {\r\n    if (!this.actionOverlayRef) {\r\n      const modalConfig = { ...DEFAULT_CONFIG, ...config };\r\n      this.actionOverlayRef = this.createOverlay(modalConfig);\r\n\r\n      const injector = this.createKillInjector(config);\r\n      const killModalPortal = new ComponentPortal(\r\n        GameActionComponent,\r\n        null,\r\n        injector,\r\n      );\r\n      this.actionOverlayRef.attach(killModalPortal);\r\n    }\r\n  }\r\n\r\n  closeGameActionModal() {\r\n    if (this.actionOverlayRef) {\r\n      this.actionOverlayRef.dispose();\r\n      this.actionOverlayRef = null;\r\n    }\r\n  }\r\n\r\n  openAlertModal(config: AlertModalConfig = {}) {\r\n    const modalConfig = { ...DEFAULT_CONFIG, ...config };\r\n    this.alertOverlayRef = this.createOverlay(modalConfig);\r\n\r\n    const injector = this.createAlertInjector(config, this.alertOverlayRef);\r\n    const alertModalPortal = new ComponentPortal(\r\n      AlertComponent,\r\n      null,\r\n      injector,\r\n    );\r\n\r\n    this.alertOverlayRef.attach(alertModalPortal);\r\n\r\n    this.alertOverlayRef\r\n      .backdropClick()\r\n      .subscribe(() => this.closeAlertModal());\r\n  }\r\n\r\n  closeAlertModal() {\r\n    if (this.alertOverlayRef) {\r\n      this.alertOverlayRef.dispose();\r\n      this.alertOverlayRef = undefined;\r\n    }\r\n  }\r\n\r\n  private getOverlayConfig(config: ModalConfig): OverlayConfig {\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .global()\r\n      .centerHorizontally()\r\n      .centerVertically();\r\n\r\n    const overlayConfig = new OverlayConfig({\r\n      hasBackdrop: config.hasBackdrop,\r\n      backdropClass: config.backdropClass,\r\n      panelClass: config.panelClass,\r\n      scrollStrategy: this.overlay.scrollStrategies.block(),\r\n      positionStrategy,\r\n    });\r\n\r\n    return overlayConfig;\r\n  }\r\n\r\n  private createOverlay(config: ModalConfig) {\r\n    const overlayConfig = this.getOverlayConfig(config);\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  private createAlertInjector(\r\n    config: AlertModalConfig,\r\n    overlayRef: OverlayRef,\r\n  ) {\r\n    return Injector.create({\r\n      providers: [\r\n        { provide: ALERT_OVERLAY_REF, useValue: overlayRef },\r\n        { provide: ALERT_MODAL_MESSAGE, useValue: config.message },\r\n      ],\r\n    });\r\n  }\r\n\r\n  private createKillInjector(config: ActionModalConfig) {\r\n    return Injector.create({\r\n      providers: [\r\n        { provide: GAME_ACTION_MODAL_CITIZENS, useValue: config.citizens },\r\n        {\r\n          provide: GAME_ACTION_MODAL_CLOSE,\r\n          useValue: this.closeGameActionModal.bind(this),\r\n        },\r\n        {\r\n          provide: GAME_ACTION_MODAL_ROOM_CODE,\r\n          useValue: config.roomCode,\r\n        },\r\n        {\r\n          provide: GAME_ACTION_MODAL_ACTION_TYPE,\r\n          useValue: config.actionType,\r\n        },\r\n        {\r\n          provide: GAME_ACTION_MODAL_MY_CITIZEN,\r\n          useValue: config.myCitizen,\r\n        },\r\n        {\r\n          provide: GAME_ACTION_MODAL_RESULT_MESSAGE,\r\n          useValue: config.gameResultMessage,\r\n        },\r\n        {\r\n          provide: GAME_ACTION_MODAL_OPEN_IDLE,\r\n          useValue: this.openIdleModal.bind(this),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CommonService } from 'src/app/common.service';\r\nimport { ActionType } from 'src/app/shared/models/action.modal';\r\nimport { CardType } from 'src/app/shared/models/card-type.model';\r\nimport { Card } from 'src/app/shared/models/card.model';\r\nimport { Citizen } from 'src/app/shared/models/citizen.model';\r\nimport {\r\n  GAME_ACTION_MODAL_ACTION_TYPE,\r\n  GAME_ACTION_MODAL_CITIZENS,\r\n  GAME_ACTION_MODAL_CLOSE,\r\n  GAME_ACTION_MODAL_MY_CITIZEN,\r\n  GAME_ACTION_MODAL_OPEN_IDLE,\r\n  GAME_ACTION_MODAL_RESULT_MESSAGE,\r\n  GAME_ACTION_MODAL_ROOM_CODE,\r\n} from 'src/app/shared/tokens/game-action.tokens';\r\nimport { GameService } from '../game.service';\r\n\r\n@Component({\r\n  selector: 'game-action',\r\n  templateUrl: './action.component.html',\r\n  styleUrls: ['./action.component.scss'],\r\n})\r\nexport class GameActionComponent {\r\n  constructor(\r\n    @Inject(GAME_ACTION_MODAL_CITIZENS) public citizens: Citizen[],\r\n    @Inject(GAME_ACTION_MODAL_CLOSE) public closeModal: () => void,\r\n    @Inject(GAME_ACTION_MODAL_ROOM_CODE) public roomCode: string,\r\n    @Inject(GAME_ACTION_MODAL_ACTION_TYPE) public actionType: ActionType,\r\n    @Inject(GAME_ACTION_MODAL_MY_CITIZEN) public myCitizen: Citizen,\r\n    @Inject(GAME_ACTION_MODAL_RESULT_MESSAGE) public gameResultMessage: string,\r\n    @Inject(GAME_ACTION_MODAL_OPEN_IDLE) public openIdleModal: () => void,\r\n    private gameService: GameService,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  get actionListItems() {\r\n    switch (this.actionType) {\r\n      case ActionType.MafiaKill:\r\n      case ActionType.PoliceCheck:\r\n      case ActionType.CivilKill:\r\n        return this.citizens;\r\n      case ActionType.CardReveal:\r\n        return this.myCitizen.cards;\r\n      case ActionType.GameFinished:\r\n        return [];\r\n    }\r\n  }\r\n\r\n  get actionTitle() {\r\n    if (this.policeCheckResult) {\r\n      return this.cardType2String(this.policeCheckResult.cardType);\r\n    }\r\n    switch (this.actionType) {\r\n      case ActionType.MafiaKill:\r\n        return 'Кого убить?';\r\n      case ActionType.PoliceCheck:\r\n        return 'Кого проверить?';\r\n      case ActionType.CardReveal:\r\n        return 'Вскройте карту';\r\n      case ActionType.CivilKill:\r\n        return 'Кого осудить?';\r\n      case ActionType.GameFinished:\r\n        return 'Игра окончена';\r\n    }\r\n  }\r\n\r\n  selected: Citizen;\r\n  selectedCardIndex: number;\r\n\r\n  actionTypeEnum = ActionType;\r\n  policeCheckResult: Card;\r\n\r\n  onCitizenSelect(citizen: Citizen) {\r\n    if (this.isCitizenDead(citizen)) {\r\n      return;\r\n    }\r\n    this.selected = citizen;\r\n  }\r\n  onCardSelect(cardIndex: number) {\r\n    if (this.myCitizen.cards[cardIndex].isRevealed) {\r\n      return;\r\n    }\r\n    this.selectedCardIndex = cardIndex;\r\n  }\r\n  onKill() {\r\n    if (this.actionType == ActionType.MafiaKill) {\r\n      this.gameService\r\n        .killByMafia(this.roomCode, this.selected.name)\r\n        .subscribe(() => void 0);\r\n    } else {\r\n      this.gameService\r\n        .killByCivil(this.roomCode, this.selected.name)\r\n        .subscribe(() => void 0);\r\n    }\r\n    this.openIdleModal();\r\n    this.closeModal();\r\n  }\r\n\r\n  onPoliceCheck(cardIndex: number) {\r\n    this.gameService\r\n      .policeCheck(this.roomCode, this.selected.name, String(cardIndex))\r\n      .subscribe((card) => {\r\n        this.policeCheckResult = card;\r\n        setTimeout(() => this.openIdleModal(), 2000);\r\n      });\r\n  }\r\n\r\n  onCardReveal() {\r\n    this.gameService\r\n      .cardReveal(this.roomCode, this.myCitizen.name, this.selectedCardIndex)\r\n      .subscribe(() => void 0);\r\n    this.openIdleModal();\r\n    this.closeModal();\r\n  }\r\n  onGameFinished() {\r\n    this.router.navigate(['']);\r\n    this.closeModal();\r\n  }\r\n\r\n  isCitizenDead(citizen: Citizen) {\r\n    return citizen.cards.every((card) => card.isRevealed);\r\n  }\r\n\r\n  cardType2String(cardType: CardType) {\r\n    switch (cardType) {\r\n      case CardType.CIVIL:\r\n        return 'Мирный житель';\r\n      case CardType.MAFIA:\r\n        return 'Мафия';\r\n      case CardType.POLICE:\r\n        return 'Комиссар';\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 class=\"mb-3 text-center\">{{ actionTitle }}</h3>\r\n  <h4\r\n    class=\"mb-3 text-center\"\r\n    *ngIf=\"actionType == actionTypeEnum.GameFinished\"\r\n  >\r\n    {{ gameResultMessage }}\r\n  </h4>\r\n  <ul\r\n    class=\"mb-3 p-0\"\r\n    *ngIf=\"\r\n      !policeCheckResult &&\r\n      actionType != actionTypeEnum.CardReveal &&\r\n      actionType != actionTypeEnum.GameFinished\r\n    \"\r\n  >\r\n    <li\r\n      *ngFor=\"let citizen of citizens\"\r\n      class=\"text-center mb-2\"\r\n      (click)=\"onCitizenSelect(citizen)\"\r\n      [ngClass]=\"{\r\n        selected: citizen.name == selected?.name,\r\n        'text-danger': isCitizenDead(citizen)\r\n      }\"\r\n    >\r\n      {{ citizen.name }}\r\n    </li>\r\n  </ul>\r\n  <ul\r\n    class=\"mb-3 p-0\"\r\n    *ngIf=\"!policeCheckResult && actionType == actionTypeEnum.CardReveal\"\r\n  >\r\n    <li\r\n      *ngFor=\"let card of myCitizen.cards; let i = index\"\r\n      class=\"text-center mb-2\"\r\n      (click)=\"onCardSelect(i)\"\r\n      [ngClass]=\"{\r\n        selected: i == selectedCardIndex,\r\n        'text-danger': card.isRevealed\r\n      }\"\r\n    >\r\n      {{ cardType2String(card.cardType) }}\r\n    </li>\r\n  </ul>\r\n  <button\r\n    mat-raised-button\r\n    (click)=\"onKill()\"\r\n    class=\"w-100\"\r\n    [disabled]=\"!selected\"\r\n    *ngIf=\"\r\n      actionType == actionTypeEnum.MafiaKill ||\r\n      actionType == actionTypeEnum.CivilKill\r\n    \"\r\n  >\r\n    УБИТЬ\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    class=\"w-100 mb-2\"\r\n    [disabled]=\"!selected\"\r\n    *ngIf=\"actionType == actionTypeEnum.PoliceCheck && !policeCheckResult\"\r\n    (click)=\"onPoliceCheck(0)\"\r\n  >\r\n    ПРОВЕРИТЬ ПЕРВУЮ КАРТУ\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    class=\"w-100\"\r\n    [disabled]=\"!selected\"\r\n    *ngIf=\"actionType == actionTypeEnum.PoliceCheck && !policeCheckResult\"\r\n    (click)=\"onPoliceCheck(1)\"\r\n  >\r\n    ПРОВЕРИТЬ ВТОРУЮ КАРТУ\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    class=\"w-100\"\r\n    [disabled]=\"selectedCardIndex === null || selectedCardIndex === undefined\"\r\n    *ngIf=\"actionType == actionTypeEnum.CardReveal\"\r\n    (click)=\"onCardReveal()\"\r\n  >\r\n    ПОКАЗАТЬ КАРТУ\r\n  </button>\r\n  <button\r\n    mat-raised-button\r\n    class=\"w-100\"\r\n    *ngIf=\"actionType == actionTypeEnum.GameFinished\"\r\n    (click)=\"onGameFinished()\"\r\n  >\r\n    НА ГЛАВНУЮ\r\n  </button>\r\n</div>\r\n","const windowLocationOrigin = window.location.origin;\r\nexport const BASE_URL = 'http://localhost:3000/api/';\r\n// export const BASE_URL = `${windowLocationOrigin}/api/`;\r\n","import { InjectionToken } from '@angular/core';\r\nimport { ActionType } from '../models/action.modal';\r\nimport { Citizen } from '../models/citizen.model';\r\n\r\nexport const GAME_ACTION_MODAL_CITIZENS = new InjectionToken<Citizen[]>(\r\n  'GAME_ACTION_MODAL_CITIZENS',\r\n);\r\nexport const GAME_ACTION_MODAL_CLOSE = new InjectionToken<() => void>(\r\n  'GAME_ACTION_MODAL_CLOSE',\r\n);\r\nexport const GAME_ACTION_MODAL_ROOM_CODE = new InjectionToken<string>(\r\n  'GAME_ACTION_MODAL_ROOM_CODE',\r\n);\r\nexport const GAME_ACTION_MODAL_ACTION_TYPE = new InjectionToken<ActionType>(\r\n  'GAME_ACTION_MODAL_ACTION_TYPE',\r\n);\r\nexport const GAME_ACTION_MODAL_MY_CITIZEN = new InjectionToken<Citizen>(\r\n  'GAME_ACTION_MODAL_MY_CITIZEN',\r\n);\r\nexport const GAME_ACTION_MODAL_RESULT_MESSAGE = new InjectionToken<string>(\r\n  'GAME_ACTION_MODAL_RESULT_MESSAGE',\r\n);\r\nexport const GAME_ACTION_MODAL_OPEN_IDLE = new InjectionToken<() => void>(\r\n  'GAME_ACTION_MODAL_OPEN_IDLE',\r\n);\r\n","export enum ActionType {\r\n  MafiaKill,\r\n  PoliceCheck,\r\n  CardReveal,\r\n  CivilKill,\r\n  GameFinished,\r\n}\r\n","import { Card } from './card.model';\r\n\r\nexport class Citizen {\r\n  shouldRevealCard = false;\r\n\r\n  get canPlay() {\r\n    return this.cards.some((card) => !card.isRevealed);\r\n  }\r\n\r\n  constructor(public name: string, public cards: Card[] = []) {}\r\n}\r\n","import { OverlayRef } from '@angular/cdk/overlay';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const ALERT_MODAL_MESSAGE = new InjectionToken<string>(\r\n  'ALERT_MODAL_MESSAGE',\r\n);\r\nexport const ALERT_OVERLAY_REF = new InjectionToken<OverlayRef>(\r\n  'ALERT_OVERLAY_REF',\r\n);\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () => import('./room/room.module').then((m) => m.RoomModule),\n  },\n  {\n    path: 'game',\n    loadChildren: () => import('./game/game.module').then((m) => m.GameModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}